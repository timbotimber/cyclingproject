{"version":3,"sources":["components/PlotView.js","components/TripReview.js","components/NavBar.js","components/Login.js","components/Signup.js","components/TripCard.js","components/Search.js","components/FilterPanel.js","components/Trips.js","components/Profile.js","components/MapViewDetail.js","components/TripDetail.js","components/Home.js","components/ElevationChart.js","App.js","serviceWorker.js","index.js"],"names":["map","withRouter","props","tripData","title","origin_name","destination_name","distance","duration","elevation_gain","className","onSubmit","event","preventDefault","origin","destination","lng","lat","zoom","difficulty","elevations","coordinates","uuid","waypoints","axios","post","then","response","console","log","history","push","id","name","value","onChange","updateTitle","target","type","placeholder","toFixed","mapboxgl","accessToken","PlotView","state","draw","reviewTrip","user","removeRoute","getSource","removeLayer","removeSource","updateRoute","data","getAll","lastFeature","features","length","newCoords","geometry","join","getMatch","e","url","req","XMLHttpRequest","responseType","open","onload","jsonResponse","arr","routes","setState","snapToBounds","reverseGeocode","getElevations","calculateGain","coords","addRoute","getInstructions","send","a","promises","coord","get","feature","properties","ele","Promise","all","gain","i","realisticGain","addLayer","source","layout","paint","legs","tripDirections","steps","j","maneuver","instruction","componentDidMount","Map","container","mapContainer","style","center","MapBoxGLDraw","displayControlsDefault","controls","line_string","trash","styles","filter","addControl","on","getCenter","getZoom","componentDidUpdate","prevState","match","params","trip","locality","find","el","place_type","includes","place_name","place","region","goToReviewTrip","text","bounds","reduce","extend","LngLatBounds","fitBounds","padding","tripReviewCard","this","onClick","ref","React","Component","NavBar","firstName","role","aria-label","to","delete","setUser","href","Login","useState","email","password","message","handleChange","catch","err","htmlFor","process","Signup","lastName","TripCard","userInfo","setUserInfo","userTrips","setUserTrips","useEffect","getData","getUserTrips","trips","key","_id","liked_trips","src","alt","deleteOne","Search","query","updateSearchText","executeSearch","FilterPanel","checked","easy","mutate","intermediate","advanced","oneDay","threeDay","oneWeek","hardcore","executeFilter","Trips","filteredTrips","Easy","Intermediate","Advanced","obj","filteredArray","elem","Profile","setTrips","buttonStateTrips","buttonStyleTrips","setButtonStyleTrips","buttonStateFav","setButtonStateFav","buttonStyleFavs","profilePic","userCoords","element","combinedCoords","concat","toF","TripDetail","setTrip","Home","ElevationChart","setElevations","setOrigin","setDestination","chart","setChart","chartRef","useRef","res","myChartRef","current","getContext","xAxis","Chart","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","options","bezierCurve","elements","point","radius","scales","xAxes","gridLines","color","yAxes","createChart","App","userObj","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0b6ec1de.chunk.js","sourcesContent":["import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapBoxGLDraw from 'mapbox-gl-draw';\nimport axios from 'axios';\nimport TripReview from './TripReview';\nmapboxgl.accessToken =\n  'pk.eyJ1IjoiamFjcXVlbGluZWNoZW4iLCJhIjoiY2s2ZHB5Y2RxMDkxbzNkbXA2bXVzM3JvbiJ9.pUyDxtMWjGqmGgX4JAdL7g';\n\nlet map;\n\nexport default class PlotView extends React.Component {\n  state = {\n    title: '',\n    origin: [],\n    origin_name: '',\n    destination: [],\n    destination_name: '',\n    map: null,\n    draw: null,\n    lng: 13,\n    lat: 52,\n    zoom: 5,\n    uuid: '',\n    duration: '',\n    distance: '',\n    difficulty: '',\n    elevations: [],\n    elevation_gain: 0,\n    coordinates: [],\n    waypoints: [],\n    reviewTrip: false,\n    user: '',\n  };\n\n  // REMOVE ROUTE\n  removeRoute = () => {\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n      //  document.getElementById('calculated-line').innerHTML = '';\n    } else {\n      return;\n    }\n  };\n\n  // UPDATE ROUTE\n  updateRoute = () => {\n    this.removeRoute(); // overwrite any existing layers\n    let data = this.state.draw.getAll();\n    // let answer = document.getElementById('calculated-line');\n    let lastFeature = data.features.length - 1;\n    let coords = data.features[lastFeature].geometry.coordinates;\n    let newCoords = coords.join(';');\n    this.getMatch(newCoords);\n  };\n\n  // RENDERING MATCHED ROUTE\n  getMatch = e => {\n    let url =\n      'https://api.mapbox.com/directions/v5/mapbox/cycling/' +\n      e +\n      '?geometries=geojson&steps=true&&access_token=' +\n      mapboxgl.accessToken;\n    let req = new XMLHttpRequest();\n    // console.log(\"req\", req);\n    req.responseType = 'json';\n    req.open('GET', url, true);\n    req.onload = () => {\n      let jsonResponse = req.response;\n      let arr = jsonResponse.routes[0].geometry.coordinates;\n      // console.log(\"jsonReponse\", jsonResponse);\n      // CALCULATING DIFFICULTY LEVEL BASED ON DISTANCE\n      let distance = jsonResponse.routes[0].distance * 0.001;\n      let difficulty = '';\n      if (distance < 50) {\n        difficulty = 'Easy';\n      } else if (distance >= 150) {\n        difficulty = 'Advanced';\n      } else {\n        difficulty = 'Intermediate';\n      }\n      this.setState(\n        {\n          distance: distance,\n          duration: jsonResponse.routes[0].duration / 60,\n          coordinates: jsonResponse.routes[0].geometry.coordinates,\n          uuid: jsonResponse.uuid,\n          waypoints: jsonResponse.waypoints,\n          origin: jsonResponse.routes[0].geometry.coordinates[0],\n          destination: jsonResponse.routes[0].geometry.coordinates[arr.length - 1],\n          difficulty: difficulty,\n        },\n        () => {\n          this.snapToBounds();\n          this.reverseGeocode();\n          this.getElevations().then(response => {\n            this.calculateGain(response);\n          });\n        }\n      );\n\n      let coords = jsonResponse.routes[0].geometry;\n      // add the route to the map\n      this.addRoute(coords);\n      this.getInstructions(jsonResponse.routes[0]);\n    };\n    req.send();\n  };\n\n  // RETRIEVE ELEVATION DATA\n  getElevations = async () => {\n    let elevations = [];\n\n    let promises = this.state.coordinates.map(coord => {\n      return axios\n        .get(\n          `https://api.mapbox.com/v4/mapbox.mapbox-terrain-v2/tilequery/${coord[0]},${coord[1]}.json?layers=contour&limit=50&access_token=${mapboxgl.accessToken}`\n        )\n        .then(response => {\n          response = response.data.features;\n          for (const feature of response) {\n            elevations.push(feature.properties.ele);\n          }\n        });\n    });\n    await Promise.all(promises);\n    this.setState({\n      elevations: elevations,\n    });\n    return elevations;\n  };\n\n  // CALCULATING ELEVATION GAIN\n  calculateGain = arr => {\n    let gain = 0;\n    for (let i = 1; i < arr.length; i++) {\n      if (arr[i] > arr[i - 1]) {\n        gain += arr[i] - arr[i - 1];\n      }\n    }\n    let realisticGain = gain / 2;\n    this.setState({\n      elevation_gain: realisticGain,\n    });\n  };\n\n  // ADD ROUTE\n  addRoute = coords => {\n    // check if the route is already loaded\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n    } else {\n      this.state.map.addLayer({\n        id: 'route',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            properties: {},\n            geometry: coords,\n          },\n        },\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round',\n        },\n        paint: {\n          'line-color': '#ff6962',\n          'line-width': 8,\n          'line-opacity': 0.8,\n        },\n      });\n    }\n  };\n\n  // GET NAVIGATION INSTRUCTIONS\n  getInstructions = data => {\n    // Target the sidebar to add the instructions\n    // let directions = document.getElementById('directions');\n    let legs = data.legs;\n    let tripDirections = [];\n    // Output the instructions for each step of each leg in the response object\n    for (let i = 0; i < legs.length; i++) {\n      let steps = legs[i].steps;\n      for (let j = 0; j < steps.length; j++) {\n        tripDirections.push('<br><li>' + steps[j].maneuver.instruction + '</li>');\n      }\n    }\n    // directions.innerHTML = '<br><h2>Trip duration: ' + Math.floor(data.duration / 60) + ' min.</h2>' + tripDirections;\n  };\n\n  // COMPONENT DID MOUNT\n  componentDidMount = () => {\n    map = new mapboxgl.Map({\n      container: this.mapContainer,\n      // style: \"mapbox://styles/mapbox/streets-v11\",\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n      duration: this.state.duration,\n      distance: this.state.distance,\n    });\n    // console.log('duration', duration);\n    const draw = new MapBoxGLDraw({\n      displayControlsDefault: false,\n      controls: {\n        line_string: true,\n        trash: true,\n      },\n      styles: [\n        // ACTIVE (being drawn)\n        // line stroke\n        {\n          id: 'gl-draw-line',\n          type: 'line',\n          filter: ['all', ['==', '$type', 'LineString'], ['!=', 'mode', 'static']],\n          layout: {\n            'line-cap': 'round',\n            'line-join': 'round',\n          },\n          paint: {\n            'line-color': '#ff6962', // Color: \"sky\"\n            'line-dasharray': [0.2, 2],\n            'line-width': 4,\n            'line-opacity': 1.0,\n          },\n        },\n        // vertex point halos\n        {\n          id: 'gl-draw-polygon-and-line-vertex-halo-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 10,\n            'circle-color': '#FFF',\n          },\n        },\n        // vertex points\n        {\n          id: 'gl-draw-polygon-and-line-vertex-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 6,\n            'circle-color': '#ff6962',\n          },\n        },\n      ],\n    });\n    this.setState({ map, draw }, () => {\n      const { map, draw } = this.state;\n      // add the draw tool to the map\n      map.addControl(draw);\n      // add create, update, or delete actions\n      map.on('draw.create', this.updateRoute);\n      map.on('draw.update', this.updateRoute);\n      map.on('draw.delete', this.removeRoute);\n      // Storing new coordinate (whatever the user interacts with)\n      map.on('move', () => {\n        this.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toFixed(2),\n        });\n      });\n    });\n  };\n\n  componentDidUpdate = prevState => {\n    const id = this.props.match.params.id;\n    if (prevState.trip !== this.state.trip)\n      axios.get(`/api/trips/trip/${id}`).then(response => {\n        console.log('response', response);\n        this.setState({\n          trip: response.data,\n        });\n      });\n  };\n\n  // REVERSE GEOCODING: GETTING LOCATION NAME FROM COORDINATES\n  reverseGeocode = () => {\n    // Origin\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.origin[0]},${this.state.origin[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        // console.log(\"full\", response);\n        let features = response.data.features;\n        // console.log(features);\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ origin_name: locality.place_name });\n          return;\n        }\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ origin_name: place.place_name });\n          return;\n        }\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ origin_name: region.place_name });\n          return;\n        }\n      });\n    // Destination\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.destination[0]},${this.state.destination[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        let features = response.data.features;\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ destination_name: locality.place_name });\n          return;\n        }\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ destination_name: place.place_name });\n          return;\n        }\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ destination_name: region.place_name });\n          return;\n        }\n      });\n  };\n\n  // TOGGLE MAP SIDEBAR VIEW\n  goToReviewTrip = () => {\n    this.setState({\n      reviewTrip: !this.state.reviewTrip,\n    });\n  };\n\n  // UPDATE TITLE OF TRIP\n  updateTitle = text => {\n    this.setState({\n      title: text,\n    });\n  };\n\n  // ROUTE: ZOOM TO FIT\n  snapToBounds = () => {\n    let coordinates = this.state.coordinates;\n    let bounds = coordinates.reduce((bounds, coord) => {\n      return bounds.extend(coord);\n    }, new mapboxgl.LngLatBounds(coordinates[0], coordinates[0]));\n\n    map.fitBounds(bounds, {\n      padding: 100,\n    });\n  };\n\n  render() {\n    // console.log(this.state);\n    let tripReviewCard;\n    let text;\n    if (this.state.reviewTrip) {\n      text = 'Go Back';\n      tripReviewCard = (\n        <div className=\"sidebarReview\">\n          <TripReview tripData={this.state} updateTitle={this.updateTitle} />\n        </div>\n      );\n    } else {\n      text = 'Check out your Details!';\n    }\n    return (\n      <div>\n        {this.state.distance && (\n          <div className=\"sidebar\">\n            {tripReviewCard}\n            <button className=\"button-solid\" onClick={this.goToReviewTrip}>\n              {text}\n            </button>\n          </div>\n        )}\n        {!this.state.distance && (\n          <div className=\"popUp\">\n            <p className=\"caption-strong\">Plot out your trip and press enter </p>\n          </div>\n        )}\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('app'));\n","import React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nconst TripReview = props => {\n  const handleChange = event => {\n    props.updateTitle(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      title,\n      origin,\n      origin_name,\n      destination,\n      destination_name,\n      lng,\n      lat,\n      zoom,\n      distance,\n      duration,\n      difficulty,\n      elevations,\n      elevation_gain,\n      coordinates,\n      uuid,\n      waypoints\n    } = props.tripData;\n    // const id = this.state.match.params.\n    axios\n      .post(\"/api/trips/addTrip\", {\n        title,\n        origin,\n        origin_name,\n        destination,\n        destination_name,\n        lng,\n        lat,\n        zoom,\n        distance,\n        duration,\n        difficulty,\n        elevations,\n        elevation_gain,\n        coordinates,\n        uuid,\n        waypoints\n      })\n      .then(response => {\n        console.log(response);\n        props.history.push(\"/profile\");\n      });\n  };\n  const {\n    title,\n    origin_name,\n    destination_name,\n    distance,\n    duration,\n    elevation_gain\n  } = props.tripData;\n\n  return (\n    <div>\n      <form className=\"review-trip\" onSubmit={handleSubmit}>\n        <h2>Review your trip</h2>\n        <div className=\"vertical-space\"></div>\n        <p className=\"caption-strong\">Trip Name:</p>\n\n        <input\n          className=\"input-text\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Name your trip\"\n        />\n        <div className=\"divider\"></div>\n        <div>\n          <p className=\"caption-strong\">Origin:</p>\n          <p>{origin_name}</p>\n          <br />\n          <p className=\"caption-strong\">Destination:</p>\n          <p>{destination_name}</p>\n          <br />\n          <div className=\"review-trip-attributes\">\n            <div>\n              <p className=\"caption-strong\">Duration:</p>\n              <p>{(duration / 60).toFixed(2)} hours</p>\n            </div>\n            <div>\n              <p className=\"caption-strong\">Distance:</p>\n              <p>{distance.toFixed(2)} km</p>\n            </div>\n            <div>\n              <p className=\"caption-strong\">Elevation gain:</p>\n              <p>{elevation_gain} m</p>\n            </div>\n          </div>\n          <br />\n          <button className=\"button-solid\">Save this trip</button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default withRouter(TripReview);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst NavBar = props => {\n  const logout = () => {\n    axios.delete('/api/auth/logout').then(() => {\n      props.setUser(null);\n    });\n  };\n\n  if (props.user) {\n    return (\n      <nav className=\"navbar\">\n        {props.user.firstName && (\n          <div className=\"nav-greeting\">\n            <p>\n              <span role=\"img\" aria-label=\"wave\">\n                👋🏻\n              </span>\n              Hey {props.user.firstName}!\n            </p>\n          </div>\n        )}\n        <div className=\"logo\">\n          <Link to=\"/\">Sykkel</Link>\n        </div>\n        <div className=\"nav-links\">\n          <Link to=\"/profile\">Profile</Link>\n          <Link to=\"/plotview\">Plan</Link>\n\n          <Link to=\"/trips\">Explore</Link>\n          <Link onClick={logout} to=\"/\">\n            Logout\n          </Link>\n        </div>\n      </nav>\n    );\n  } else {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"nav-greeting\"></div>\n        <div className=\"logo\">\n          <a href=\"/\">Sykkel</a>\n        </div>\n\n        <div className=\"nav-links\">\n          <Link to=\"/plotview\">Plan</Link>\n          <Link to=\"/trips\">Explore</Link>\n          <Link to=\"/login\">Log in</Link>\n          <Link to=\"/signup\">\n            <button className=\"button-pill\">Sign up</button>\n          </Link>\n        </div>\n      </nav>\n    );\n  }\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Login = props => {\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n    message: '',\n  });\n\n  const handleChange = event => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post('/api/auth/login', {\n        email: state.email,\n        password: state.password,\n      })\n      .then(response => {\n        console.log(response.data);\n        props.setUser(response.data);\n        props.history.push('/plotview');\n      })\n      .catch(err => {\n        console.log('error test');\n        setState({ ...state, message: err.response.data.message });\n        console.log('message', state.message);\n      });\n  };\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-box\">\n        <h2>Log in</h2>\n        <div className=\"auth-form\">\n          <form onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"email\"></label>\n              <input\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={state.email}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\"></label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={state.password}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <button className=\"auth-btn\" type=\"submit\">\n                Log in\n              </button>\n            </div>\n          </form>\n          <p id=\"or-google\">or</p>\n          <div>\n            <a href={`${process.env.REACT_APP_SERVER_URL}/api/auth/google`}>\n              {' '}\n              <button className=\"auth-btn sort-button\">Log in with Google</button>\n            </a>\n          </div>\n          <p id=\"auth-line\">\n            No account yet?{' '}\n            <Link className=\"auth-links\" to=\"/signup\">\n              Signup\n            </Link>\n          </p>\n        </div>\n        {state.message && <p>{state.message}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Signup = props => {\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n    message: '',\n  });\n\n  const handleChange = event => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios\n      .post('/api/auth/signup', {\n        email: state.email,\n        password: state.password,\n      })\n      .then(response => {\n        // redirect\n        // update state for user in <App/>\n        props.setUser(response.data);\n        props.history.push('/');\n      })\n      .catch(err => {\n        console.log('error test', err.response.data.message);\n        setState({ ...state, message: err.response.data.message });\n      });\n  };\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-box\">\n        <h2>Create an Account</h2>\n\n        <div className=\"auth-form\">\n          <form onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"firstName\"></label>\n              <input\n                type=\"text\"\n                id=\"firstName\"\n                name=\"firstName\"\n                placeholder=\"First name\"\n                value={state.firstName}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"lastName\"></label>\n              <input\n                type=\"text\"\n                id=\"lastName\"\n                name=\"lastName\"\n                placeholder=\"Last name\"\n                value={state.lastName}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\"></label>\n              <input\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={state.email}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\"></label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                value={state.password}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <button className=\"auth-btn\" type=\"submit\">\n                Sign up\n              </button>\n            </div>\n          </form>\n          <p id=\"or-google\">or</p>\n          <div>\n            <a href={`${process.env.REACT_APP_SERVER_URL}/api/auth/google`}>\n              {' '}\n              <button className=\"auth-btn sort-button\">Sign up with Google</button>\n            </a>\n          </div>\n          <p id=\"auth-line\">\n            Already have an account?{' '}\n            <Link className=\"auth-links\" to=\"/login\">\n              Login\n            </Link>\n          </p>\n        </div>\n        {state.message && <p>{state.message}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst TripCard = props => {\n  const [userInfo, setUserInfo] = useState([]);\n  const [userTrips, setUserTrips] = useState([]);\n\n  useEffect(() => {\n    getData();\n    getUserTrips();\n  }, []);\n\n  const getData = () => {\n    axios.get('/api/auth/likedtrips').then(response => {\n      setUserInfo(response.data);\n    });\n  };\n\n  const getUserTrips = () => {\n    axios.get('/api/auth/usertrips').then(response => {\n      setUserTrips(response.data);\n    });\n  };\n\n  const faveTrip = id => {\n    axios.post(`/api/trips/updatefaves/${id}`).then(response => {\n      setUserInfo(response.data.liked_trips);\n    });\n  };\n\n  const deleteTrip = id => {\n    axios.post(`/api/trips/delete/${id}`).then(response => {\n      props.deleteOne(id);\n    });\n  };\n\n  return (\n    <div className=\"trips-list\">\n      {props.trips.map(trip => {\n        return (\n          <div key={trip._id} className=\"trip-card\">\n            <div className=\"primary-content\">\n              <div>\n                <h2>\n                  <Link to={`/trip/${trip._id}`}>{trip.title}</Link>\n                </h2>\n                <p>From: {trip.origin_name}</p>\n                <p>To: {trip.destination_name}</p>\n                {/* <p>Duration: {(props.duration / 60).toFixed(2)} hours</p> */}\n              </div>\n              <div key={trip._id} className=\"favebutton\">\n                <div onClick={() => faveTrip(trip._id, trip)}>\n                  {userInfo.includes(trip._id) ? (\n                    <>\n                      <img className=\"heart\" src=\"./img/heart.png\" alt=\"heart\" />\n                    </>\n                  ) : (\n                    <>\n                      <img className=\"heart\" src=\"./img/empty_heart.png\" alt=\"empty heart\" />\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"secondary-content\">\n              <div>\n                <p className=\"caption\">Difficulty</p>\n                <p className=\"attribute\">{trip.difficulty ? trip.difficulty : 'N/A'}</p>\n              </div>\n\n              <div>\n                <p className=\"caption\">Distance</p>\n                <p className=\"attribute\">{trip.distance.toFixed(2)} km</p>\n              </div>\n\n              <div>\n                <p className=\"caption\">Duration</p>\n                <p className=\"attribute\">{(trip.duration / 60).toFixed(2)} hrs</p>\n              </div>\n\n              <div>\n                <p className=\"caption\">Elevation gain</p>\n                <p className=\"attribute\">\n                  <Link to={`chart/${trip._id}`}>{trip.elevation_gain ? trip.elevation_gain + ' m' : 'N/A'}</Link>\n                </p>\n              </div>\n\n              <div className=\"delete-attribute\">\n                {userTrips._id === trip.user ? (\n                  <button onClick={() => deleteTrip(trip._id)}>\n                    <img src=\"/img/trash_icon.png\" alt=\"delete\" />\n                  </button>\n                ) : (\n                  <></>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TripCard;\n","import React from 'react';\n\nconst Search = props => {\n  const handleChange = e => {\n    props.updateSearchText(e.target.value);\n  };\n\n  const submitSearch = e => {\n    props.executeSearch();\n  };\n\n  return (\n    <div className=\"search-wrapper\">\n      <input\n        type=\"text\"\n        placeholder=\"Title, origin, or destination\"\n        className=\"search-input\"\n        value={props.query}\n        onChange={handleChange}\n      />\n      <button className=\"search-button\" onClick={submitSearch}>\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport Search from './Search';\n\nconst FilterPanel = props => {\n  return (\n    <div className=\"filter-panel\">\n      <div className=\"search-filters\">\n        {/* <p className=\"caption-strong\">Search for a trip</p> */}\n        <Search updateSearchText={props.updateSearchText} query={props.query} executeSearch={props.executeSearch} />\n\n        <p className=\"caption-strong\">Difficulty</p>\n        <label htmlFor=\"Easy\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"Easy\"\n            id=\"Easy\"\n            checked={props.easy}\n            onChange={props.mutate}\n          />\n          Easy\n        </label>\n\n        <label htmlFor=\"Intermediate\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"Intermediate\"\n            id=\"Intermediate\"\n            checked={props.intermediate}\n            onChange={props.mutate}\n          />\n          Intermediate\n        </label>\n\n        <label htmlFor=\"Advanced\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"Advanced\"\n            id=\"Advanced\"\n            checked={props.advanced}\n            onChange={props.mutate}\n          />\n          Advanced\n        </label>\n\n        <br />\n        {/* DURATION */}\n        <p className=\"caption-strong\">Duration</p>\n\n        <label htmlFor=\"oneDay\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"oneDay\"\n            id=\"oneDay\"\n            checked={props.oneDay}\n            onChange={props.mutate}\n          />\n          1 day ride\n        </label>\n\n        <label htmlFor=\"threeDay\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"threeDay\"\n            id=\"threeDay\"\n            checked={props.threeDay}\n            onChange={props.mutate}\n          />\n          3 day ride\n        </label>\n\n        <label htmlFor=\"oneWeek\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"oneWeek\"\n            id=\"oneWeek\"\n            checked={props.oneWeek}\n            onChange={props.mutate}\n          />\n          1 week ride\n        </label>\n\n        <label htmlFor=\"hardcore\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"hardcore\"\n            id=\"hardcore\"\n            checked={props.hardcore}\n            onChange={props.mutate}\n          />\n          Hardcore\n        </label>\n      </div>\n\n      <div className=\"filter-panel-button\">\n        <button className=\"search-button\" onClick={props.executeFilter}>\n          Apply filters\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterPanel;\n","// import React, { Component } from 'react';\n// import TripCard from './TripCard';\n// import FilterPanel from './FilterPanel';\n// import axios from 'axios';\n\n// export default class Trips extends Component {\n//   // state = {\n//   //   trips: [],\n//   //   query: '',\n//   //   filteredTrips: [],\n//   //   Easy: false,\n//   //   Intermediate: false,\n//   //   Advanced: false,\n//   //   oneDay: false,\n//   //   threeDay: false,\n//   //   oneWeek: false,\n//   //   hardcore: false,\n//   // };\n\n//   // componentDidMount() {\n//   //   getData();\n//   // }\n\n//   // getData = () => {\n//   //   // console.log(\"getData()\");\n//   //   axios.get('/api/trips/addTrip').then(response => {\n//   //     setState({\n//   //       trips: response.data,\n//   //       filteredTrips: response.data,\n//   //     });\n//   //   });\n//   // };\n\n//   updateSearchText = text => {\n//     console.log('onchange query', text);\n//     setState({\n//       query: text,\n//     });\n//   };\n\n//   executeSearch = () => {\n//     let filteredTrips = state.trips.filter(obj => {\n//       if (\n//         obj.title.includes(state.query) ||\n//         obj.origin_name.includes(state.query) ||\n//         obj.destination_name.includes(state.query)\n//       ) {\n//         return true;\n//       }\n//     });\n\n//     console.log('filtered', filteredTrips);\n\n//     setState({\n//       filteredTrips: filteredTrips,\n//     });\n//   };\n\n//   mutateCheckboxBoolean = e => {\n//     let key = e.target.name;\n//     setState({ [key]: !state[key] }, () => {\n//       console.log(key, state[key]);\n//     });\n//   };\n\n//   executeFilter = e => {\n//     e.preventDefault();\n\n//     let filteredTrips = state.trips.filter(trip => {\n//       return (\n//         (state.Easy && trip.difficulty === 'Easy') ||\n//         (state.Intermediate && trip.difficulty === 'Intermediate') ||\n//         (state.Advanced && trip.difficulty === 'Advanced') ||\n//         (state.oneDay && trip.duration <= 360) ||\n//         (state.threeDay && 360 <= trip.duration <= 1080) ||\n//         (state.oneWeek && 1080 <= trip.duration <= 2520) ||\n//         (state.hardcore && trip.duration > 2520)\n//       );\n//     });\n\n//     setState({\n//       filteredTrips: filteredTrips,\n//     });\n//   };\n\n//   deleteOne = id => {\n//     console.log(id);\n//     let filteredArray = state.filteredTrips.filter(elem => {\n//       console.log(elem);\n//       return id !== elem._id;\n//     });\n//     setState({\n//       filteredTrips: filteredArray,\n//     });\n//   };\n\n//   render() {\n\n//     console.log(state.filteredTrips);\n//     return (\n//       <div className=\"wrapper\">\n//         <div className=\"filter-wrapper\">\n//           <FilterPanel\n//             updateSearchText={updateSearchText}\n//             easy={state.easy}\n//             mutate={mutateCheckboxBoolean}\n//             query={state.query}\n//             executeSearch={executeSearch}\n//             executeFilter={executeFilter}\n//           />\n//         </div>\n//         {/* <Search\n//           updateSearchText={updateSearchText}\n//           query={state.query}\n//           executeSearch={executeSearch}\n//         /> */}\n//         <div className=\"trips-wrapper\">\n//           <TripCard deleteOne={deleteOne} trips={state.filteredTrips} />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport TripCard from './TripCard';\nimport FilterPanel from './FilterPanel';\nimport axios from 'axios';\n\nconst Trips = props => {\n  const [state, setState] = useState({\n    user: props.user,\n    trips: [],\n    query: '',\n    filteredTrips: [],\n    Easy: false,\n    Intermediate: false,\n    Advanced: false,\n    oneDay: false,\n    threeDay: false,\n    oneWeek: false,\n    hardcore: false,\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios.get('/api/trips/addTrip').then(response => {\n      setState({ ...state, trips: response.data, filteredTrips: response.data });\n    });\n  };\n\n  const updateSearchText = text => {\n    setState({ ...state, query: text });\n  };\n\n  const executeSearch = () => {\n    let filteredTrips = state.trips.filter(obj => {\n      if (\n        obj.title.includes(state.query) ||\n        obj.origin_name.includes(state.query) ||\n        obj.destination_name.includes(state.query)\n      ) {\n        return true;\n      }\n    });\n    setState({ ...state, filteredTrips: filteredTrips });\n  };\n\n  const mutateCheckboxBoolean = e => {\n    let key = e.target.name;\n    setState({ ...state, [key]: !state[key] }, () => {});\n  };\n\n  const executeFilter = e => {\n    e.preventDefault();\n\n    let filteredTrips = state.trips.filter(trip => {\n      return (\n        (state.Easy && trip.difficulty === 'Easy') ||\n        (state.Intermediate && trip.difficulty === 'Intermediate') ||\n        (state.Advanced && trip.difficulty === 'Advanced') ||\n        (state.oneDay && trip.duration <= 360) ||\n        (state.threeDay && 360 <= trip.duration <= 1080) ||\n        (state.oneWeek && 1080 <= trip.duration <= 2520) ||\n        (state.hardcore && trip.duration > 2520)\n      );\n    });\n\n    setState({\n      filteredTrips: filteredTrips,\n    });\n  };\n\n  const deleteOne = id => {\n    let filteredArray = state.filteredTrips.filter(elem => {\n      return id !== elem._id;\n    });\n    setState({ ...state, filteredTrips: filteredArray });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"filter-wrapper\">\n        <FilterPanel\n          updateSearchText={updateSearchText}\n          easy={state.easy}\n          mutate={mutateCheckboxBoolean}\n          query={state.query}\n          executeSearch={executeSearch}\n          executeFilter={executeFilter}\n        />\n      </div>\n      {/* <Search\n        updateSearchText={updateSearchText}\n        query={state.query}\n        executeSearch={executeSearch}\n      /> */}\n      <div className=\"trips-wrapper\">\n        <TripCard user={state.user} deleteOne={deleteOne} trips={state.filteredTrips} />\n      </div>\n    </div>\n  );\n};\n\nexport default Trips;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TripCard from './TripCard';\n\nconst Profile = props => {\n  const [trips, setTrips] = useState([]);\n  const [likedTrips, setLikedTrips] = useState([]);\n  const [buttonStateTrips, setButtonStateTrips] = useState(true);\n  const [buttonStyleTrips, setButtonStyleTrips] = useState('sort-button-active');\n  const [buttonStateFav, setButtonStateFav] = useState(false);\n  const [buttonStyleFavs, setButtonStyleFavs] = useState('sort-button');\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios.get('/api/trips/user').then(response => {\n      if (buttonStateTrips) {\n        setTrips(response.data);\n        setButtonStyleTrips('sort-button-active');\n      }\n    });\n  };\n\n  const showFavorites = () => {\n    axios.get(`/api/trips/trips/likedtrips`).then(response => {\n      if (!buttonStateFav) {\n        setTrips(response.data);\n        setButtonStateFav('sort-button');\n      }\n    });\n  };\n\n  const deleteOne = id => {\n    console.log(id);\n    let filteredArray = trips.filter(elem => {\n      return id !== elem._id;\n    });\n    setTrips(filteredArray);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"profile-wrapper\">\n        <div className=\"info-wrapper\">\n          <div className=\"profile-img-wrapper\">\n            {props.user.profilePic ? (\n              <img className=\"profile-img\" src={props.user.profilePic} alt=\"Profile\" />\n            ) : (\n              <img className=\"profile-img\" src=\"./img/user_avatar.png\" alt=\"Profile\" />\n            )}\n          </div>\n\n          <h2>\n            {props.user.firstName} {props.user.lastName}\n          </h2>\n          <p>{props.user.email}</p>\n        </div>\n      </div>\n      <div className=\"trips-wrapper\">\n        <div className=\"sort-button-wrapper\">\n          <button className={buttonStyleTrips} onClick={getData}>\n            My Trips\n          </button>\n          <button className={buttonStyleFavs} onClick={showFavorites}>\n            My Favorites\n          </button>\n        </div>\n        <TripCard deleteOne={deleteOne} user={props.user} trips={trips} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapBoxGLDraw from 'mapbox-gl-draw';\nimport axios from 'axios';\nimport TripReview from './TripReview';\nmapboxgl.accessToken =\n  'pk.eyJ1IjoiamFjcXVlbGluZWNoZW4iLCJhIjoiY2s2ZHB5Y2RxMDkxbzNkbXA2bXVzM3JvbiJ9.pUyDxtMWjGqmGgX4JAdL7g';\n\nexport default class PlotView extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  state = {\n    title: '',\n    origin: [],\n    origin_name: '',\n    destination: [],\n    destination_name: '',\n    map: null,\n    draw: null,\n    lng: 5,\n    lat: 34,\n    zoom: 4,\n    uuid: '',\n    duration: '',\n    distance: '',\n    coordinates: [],\n    waypoints: [],\n    reviewTrip: false,\n  };\n  //\n  removeRoute = () => {\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n      //  document.getElementById('calculated-line').innerHTML = '';\n    } else {\n      return;\n    }\n  };\n\n  updateRoute = () => {\n    this.removeRoute(); // overwrite any existing layers\n    let data = this.state.draw.getAll();\n    let lastFeature = data.features.length - 1;\n    let coords = data.features[lastFeature].geometry.coordinates;\n    let newCoords = coords.join(';');\n    this.getMatch(newCoords);\n  };\n  // let primes = arr1.concat(arr2);\n\n  getMatch = e => {\n    let url =\n      'https://api.mapbox.com/directions/v5/mapbox/cycling/' +\n      e +\n      '?geometries=geojson&steps=true&&access_token=' +\n      mapboxgl.accessToken;\n\n    let req = new XMLHttpRequest();\n    req.responseType = 'json';\n    req.open('GET', url, true);\n    req.onload = () => {\n      let jsonResponse = req.response;\n      let userCoords = this.props.coordinates.map(element => {\n        return element;\n      });\n      let arr = jsonResponse.routes[0].geometry.coordinates;\n      let combinedCoords = userCoords.concat(arr);\n\n      this.setState(\n        {\n          distance: jsonResponse.routes[0].distance * 0.001,\n          duration: jsonResponse.routes[0].duration / 60,\n          coordinates: combinedCoords,\n          uuid: jsonResponse.uuid,\n          waypoints: jsonResponse.waypoints,\n          origin: jsonResponse.routes[0].geometry.coordinates[0],\n          destination: jsonResponse.routes[0].geometry.coordinates[arr.length - 1],\n        },\n        () => {\n          this.reverseGeocode();\n        }\n      );\n\n      // document.getElementById('calculated-line').innerHTML =\n      // 'Distance: ' + distance.toF + ' km<br>Duration: ' + duration.toF + ' minutes';\n      let coords = jsonResponse.routes[0].geometry;\n      // add the route to the map\n      this.addRoute(coords);\n      this.getInstructions(jsonResponse.routes[0]);\n    };\n    req.send();\n  };\n\n  addRoute = coords => {\n    // check if the route is already loaded\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n    } else {\n      this.state.map.addLayer({\n        id: 'route',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            properties: {},\n            geometry: coords,\n          },\n        },\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round',\n        },\n        paint: {\n          'line-color': '#3b9ddd',\n          'line-width': 8,\n          'line-opacity': 0.8,\n        },\n      });\n    }\n  };\n\n  getInstructions = data => {\n    // Target the sidebar to add the instructions\n    let legs = data.legs;\n    let tripDirections = [];\n    // Output the instructions for each step of each leg in the response object\n    for (let i = 0; i < legs.length; i++) {\n      let steps = legs[i].steps;\n      for (let j = 0; j < steps.length; j++) {\n        tripDirections.push('<br><li>' + steps[j].maneuver.instruction + '</li>');\n      }\n    }\n    // directions.innerHTML = '<br><h2>Trip duration: ' + Math.floor(data.duration / 60) + ' min.</h2>' + tripDirections;\n  };\n\n  componentDidMount = () => {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.props.origin[0], this.props.origin[1]],\n      zoom: this.state.zoom,\n      duration: this.state.duration,\n      distance: this.state.distance,\n    });\n\n    const draw = new MapBoxGLDraw({\n      displayControlsDefault: false,\n      controls: {\n        line_string: true,\n        trash: true,\n      },\n      styles: [\n        // ACTIVE (being drawn)\n        // line stroke\n        {\n          id: 'gl-draw-line',\n          type: 'line',\n          filter: ['all', ['==', '$type', 'LineString'], ['!=', 'mode', 'static']],\n          layout: {\n            'line-cap': 'round',\n            'line-join': 'round',\n          },\n          paint: {\n            'line-color': '#3b9ddd',\n            'line-dasharray': [0.2, 2],\n            'line-width': 4,\n            'line-opacity': 0.7,\n          },\n        },\n        // vertex point halos\n        {\n          id: 'gl-draw-polygon-and-line-vertex-halo-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 10,\n            'circle-color': '#FFF',\n          },\n        },\n        // vertex points\n        {\n          id: 'gl-draw-polygon-and-line-vertex-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 6,\n            'circle-color': '#3b9ddd',\n          },\n        },\n      ],\n    });\n\n    map.on('load', () => {\n      let userCoords = this.props.coordinates.map(element => {\n        return element;\n      });\n      map.addLayer({\n        id: 'layer1',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            geometry: {\n              type: 'LineString',\n              coordinates: userCoords,\n            },\n          },\n        },\n        layout: {\n          'line-join': 'round',\n\n          'line-cap': 'round',\n        },\n        paint: {\n          'line-color': '#ff6962',\n          'line-width': 8,\n          'line-opacity': 0.8,\n        },\n      });\n\n      // map.addSource(\"route\", {\n      //   type: \"geojson\",\n      //   data: {\n      //     type: \"Feature\",\n      //     properties: {},\n      //     geometry: {\n      //       type: \"LineString\",\n      //       coordinates: [userCoords]\n      //     }\n      //   }\n      // });\n      // map.addLayer({\n      //   id: \"route\",\n      //   type: \"line\",\n      //   source: \"route\",\n      //   layout: {\n      //     \"line-join\": \"round\",\n      //     \"line-cap\": \"round\"\n      //   },\n      //   paint: {\n      //     \"line-color\": \"#888\",\n      //     \"line-width\": 8\n      //   }\n      // });\n    });\n\n    this.setState({ map, draw }, () => {\n      const { map, draw } = this.state;\n\n      // add the draw tool to the map\n      map.addControl(draw);\n\n      // add create, update, or delete actions\n      map.on('draw.create', this.updateRoute);\n      map.on('draw.update', this.updateRoute);\n      map.on('draw.delete', this.removeRoute);\n\n      // Storing new coordinate (whatever the user interacts with)\n      map.on('move', () => {\n        this.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toF,\n        });\n      });\n    });\n  };\n\n  reverseGeocode = () => {\n    // Reverse geocoding for Origin\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.origin[0]},${this.state.origin[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        let features = response.data.features;\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ origin_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ origin_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ origin_name: region.place_name });\n          return;\n        }\n      });\n\n    // Reverse geocoding with Destination\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.destination[0]},${this.state.destination[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        let features = response.data.features;\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ destination_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ destination_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ destination_name: region.place_name });\n          return;\n        }\n      });\n  };\n\n  goToReviewTrip = () => {\n    this.setState({\n      reviewTrip: !this.state.reviewTrip,\n    });\n  };\n\n  updateTitle = text => {\n    this.setState({\n      title: text,\n    });\n  };\n\n  render() {\n    let tripReviewCard;\n    let text;\n    if (this.state.reviewTrip) {\n      text = 'Go Back';\n      tripReviewCard = (\n        <div className=\"sidebarReview\">\n          <TripReview tripData={this.state} updateTitle={this.updateTitle} />\n        </div>\n      );\n    } else {\n      text = 'Review Trip';\n    }\n    return (\n      <div>\n        {this.state.distance && (\n          <div className=\"sidebar\">\n            {tripReviewCard}\n            <button className=\"button-ghost\" onClick={this.goToReviewTrip}>\n              {text}\n            </button>{' '}\n          </div>\n        )}\n        {!this.state.distance && (\n          <div className=\"popUp\">\n            <p className=\"caption-strong\">Plot out your trip and press enter </p>\n          </div>\n        )}\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('app'));\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MapView from './MapViewDetail';\n\nconst TripDetail = props => {\n  const [trip, setTrip] = useState(null);\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    axios.get(`/api/trips/trip/${id}`).then(response => {\n      setTrip(response.data);\n    });\n  }, []);\n\n  return !trip ? (\n    <div>Jackie and the Ferry Boys working their magic... </div>\n  ) : (\n    <MapView coordinates={trip.coordinates} origin={trip.origin} />\n  );\n};\n\nexport default TripDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <div className=\"home-left\">\n        <div className=\"main\">\n          <h1>Cycling.</h1>\n          <h1>Really far.</h1>\n          <p className=\"intro-description\">\n            Introducing Sykkel. A social platform for cyclists to discover and plan long-distance cycling trips in and\n            around Europe.\n          </p>\n          <div className=\"home-btns-wrapper\">\n            <Link to=\"/trips\">\n              <button className=\"button-solid-dark\">Explore routes</button>\n            </Link>\n            <Link to=\"/plotview\">\n              <button className=\"button-solid\">Plan your own</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-right\">\n        <img src=\"/img/home-teaser.png\" alt=\"home-teaser\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, createRef, useRef } from 'react';\nimport Chart from 'chart.js';\nimport axios from 'axios';\n\nconst ElevationChart = props => {\n  const [elevations, setElevations] = useState([]);\n  const [origin, setOrigin] = useState([]);\n  const [destination, setDestination] = useState([]);\n  const [chart, setChart] = useState(false);\n\n  const chartRef = useRef();\n\n  const createChart = () => {\n    const myChartRef = chartRef.current.getContext('2d');\n\n    let xAxis = [];\n\n    for (let i = 0; i < elevations.length; i += 1) {\n      xAxis.push(' ');\n    }\n\n    new Chart(myChartRef, {\n      type: 'line',\n      data: {\n        //Bring in data\n        labels: xAxis,\n        datasets: [\n          {\n            label: 'elevation / m',\n            data: elevations,\n            fill: true,\n            backgroundColor: 'rgba(255, 105, 98, 0.2)',\n            borderColor: '#ff6962',\n            borderWidth: 2,\n            // pointBorderColor: \"rgba(255,255,255,0.0)\"\n          },\n        ],\n      },\n      options: {\n        bezierCurve: true,\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                color: 'rgba(0, 0, 0, 0)',\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                color: 'rgba(0, 0, 0, 0)',\n              },\n            },\n          ],\n        },\n      },\n    });\n    setChart(true);\n  };\n\n  const getData = () => {\n    const id = props.match.params.id;\n    return axios.get(`/api/trips/trip/${id}`).then(trip => {\n      setElevations(trip.data.elevations);\n      setOrigin(trip.data.origin);\n      setDestination(trip.data.destination);\n    });\n  };\n\n  useEffect(() => {\n    getData().then(res => {\n      createChart();\n    });\n  }, [chart]);\n\n  return (\n    <div className=\"chart\">\n      <canvas id=\"myChart\" ref={chartRef} />\n    </div>\n  );\n};\n\nexport default ElevationChart;\n","import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport PlotView from './components/PlotView';\nimport NavBar from './components/NavBar';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Trips from './components/Trips';\nimport Profile from './components/Profile';\nimport TripDetail from './components/TripDetail';\nimport Home from './components/Home';\nimport ElevationChart from './components/ElevationChart';\n\nconst App = props => {\n  const [state, setState] = useState({\n    user: props.user,\n  });\n\n  const setUser = userObj => {\n    setState({ ...state, user: userObj });\n  };\n\n  return (\n    // <MyProvider>\n    <div className=\"App\">\n      <NavBar setUser={setUser} user={state.user} />\n      <div className=\"content\">\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/plotview\" component={PlotView} />\n        <Route path=\"/login\" render={props => <Login history={props.history} setUser={setUser} />} />\n        <Route path=\"/signup\" render={props => <Signup history={props.history} setUser={setUser} />} />\n        <Route exact path=\"/trips\" render={props => <Trips user={state.user} />} />\n        <Route path=\"/chart/:id\" component={ElevationChart} />\n        <Route path=\"/trip/:id\" component={TripDetail} />\n        <Route path=\"/profile\" render={props => <Profile setUser={setUser} user={state.user} />} />\n      </div>\n    </div>\n    // </MyProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}